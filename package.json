{
  "name": "react-native-country-picker-modal",
  "version": "2.0.0",
  "description": "react-native country picker",
  "main": "node_modules/expo/AppEntry.js",
  "types": "lib/index.d.ts",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xcarpentier/react-native-country-picker-modal.git"
  },
  "scripts": {
    "start": "expo start --reset-cache",
    "start:web": "bun config:dev && expo start -w",
    "tsc": "node_modules/.bin/tsc --noEmit",
    "build": "rm -rf lib/ && node_modules/.bin/tsc && mkdir ./lib && cp -rf ./src/assets ./lib/assets && bun minify",
    "minify": "bun minify:emoji",
    "minify:emoji": "./scripts/minify.js ./lib/assets/data/countries-emoji.json",
    "config:dev": "json -I -f package.json -e 'this.main=\"node_modules/expo/AppEntry.js\"'",
    "config:npm": "json -I -f package.json -e 'this.main=\"lib/index.js\"'",
    "lint": "eslint .",
    "test": "TZ=Europe/Paris jest",
    "data:image": "rm -rf ./data/countries.json && ./scripts/transform-world-countries.js > ./data/countries.json",
    "data:emoji": "rm -rf ./data/countries-emoji.json && ./scripts/transform-world-countries.js --emoji > ./data/countries-emoji.json",
    "data:cca2": "rm -rf ./data/cca2.json && ./scripts/transform-world-countries.js --cca2 > ./data/cca2.json",
    "data:regions": "rm -rf ./data/cca2.json && ./scripts/transform-world-countries.js --regions > ./data/regions.json",
    "data:subregions": "rm -rf ./data/cca2.json && ./scripts/transform-world-countries.js --subregions > ./data/subregions.json",
    "cleaning": "rm -rf node_modules && rm -f bun.lock && bun cache clean && bun install && watchman watch-del-all && rm -fr $TMPDIR/react-*",
    "verify": "bun lint && bun build && bun test",
    "prepublishOnly": "bun verify && bun config:npm",
    "postpublish": "bun config:dev",
    "deploy": "gh-pages -d web-build",
    "predeploy": "bun verify && expo build:web && mkdir web-build/countries && cp ./data/countries.json web-build/countries/index.json",
    "dev": "expo start -w --reset-cache"
  },
  "keywords": [
    "react-native",
    "components",
    "country-picker",
    "country",
    "flag"
  ],
  "author": "Xavier Carpentier <xcapetir@gmail.com> (https://xaviercarpentier.com/)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/xcarpentier/react-native-country-picker-modal/issues"
  },
  "homepage": "http://xcarpentier.github.io/react-native-country-picker-modal",
  "dependencies": {
    "@babel/polyfill": "^7.12.1",
    "@callstack/react-theme-provider": "3.0.9",
    "@expo/metro-config": "~0.10.7",
    "@expo/metro-runtime": "^4.0.0",
    "@react-native/assets-registry": "^0.76.5",
    "@react-native/metro-config": "^0.76.5",
    "fuse.js": "3.4.5",
    "node-emoji": "1.11.0",
    "react-native-svg-transformer": "^1.5.0",
    "react-use": "^17.6.0"
  },
  "devDependencies": {
    "@babel/core": "^7.26.0",
    "@babel/eslint-parser": "^7.25.9",
    "@babel/preset-env": "^7.26.0",
    "@types/jest": "29.5.5",
    "@types/node-emoji": "1.8.2",
    "@types/react": "18.2.24",
    "@types/react-native": "0.72.3",
    "@types/react-test-renderer": "18.0.3",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "babel-cli": "6.26.0",
    "babel-jest": "29.7.0",
    "babel-preset-expo": "^9.9.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jsdoc": "^46.10.1",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-react": "^7.37.2",
    "expo": "52.0.19",
    "gh-pages": "6.0.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-expo": "^49.0.0",
    "json": "^11.0.0",
    "prettier": "3.0.3",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-native": "0.72.10",
    "react-native-web": "^0.19.13",
    "react-test-renderer": "18.2.0",
    "typescript": "^5.7.2",
    "world-countries": "5.0.0"
  },
  "jest": {
    "preset": "react-native",
    "testEnvironment": "jsdom",
    "moduleFileExtensions": [
      "js",
      "jsx",
      "json",
      "ts",
      "tsx"
    ],
    "transform": {
      "^.+\\.(js|jsx|ts|tsx)$": "babel-jest"
    },
    "testMatch": [
      "**/*.test.ts?(x)"
    ],
    "modulePathIgnorePatterns": [
      "<rootDir>/example-expo",
      "<rootDir>/example-slack-message"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "bun lint && bun tsc"
    }
  },
  "resolutions": {
    "mem": "^4.0.0"
  }
}
